import json
import requests
import time
import urlparse
import sys
from os import listdir
from os.path import isfile, join
import xml.etree.ElementTree as ET

t1 = time.time()

symbols = {
	'checkbox',
	'time',
	'date',
	'temperature',
	'volume',
	'light',
	'play',
	'pause',
	'next',
	'previous',
	'shuffle',
	'repeat',
}

symbol_count = 0
mypath = '/etc/openhab2/html/habpanel/svg/original/control/'

onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]

ET.register_namespace("","http://www.w3.org/2000/svg")
top = ET.Element('svg', attrib = { 'version':'1.1', 'xmlns:xlink':'http://www.w3.org/1999/xlink', 'x':"0px", 'y':"0px", 'viewBox':"0 0 48 48", 'enable-background':"new 0 0 48 48", 'xml:space':"preserve"})
comment = ET.Comment('Generated by SVG-Combiner')
top.append(comment)

for file in onlyfiles:
	if(file[:1] != '.'):
		r = requests.get('http://127.0.0.1:8080/static/habpanel/svg/original/control/' + file)
		
		print "Processing file: " + file + " / " + str(r.status_code);
		
		if (len(r.text) > 0):
			xml = ET.fromstring(r.text)
			for child in xml:
				if (len(child.getchildren()) > 0 and 'id' in child.attrib):
					print "ID: " + child.attrib["id"];
					if(child.attrib["id"] in symbols):
						for node in child.findall('.//*[@fill]'):
							if ('stroke' in node.attrib): node.attrib.pop('stroke')
							if ('stroke-width' in node.attrib): node.attrib.pop('stroke-width')
						top.append(child)
						symbol_count = symbol_count + 1
						print " --> added " + child.attrib['id']
						
		print "";

f = open('/etc/openhab2/html/habpanel/svg/control.svg', 'w')
f.write(ET.tostring(top,encoding='utf8', method='xml'))
f.close()


t2 = time.time()
print "Done in " + str(t2-t1) + " seconds " + str(symbol_count) + " symbols created"    



